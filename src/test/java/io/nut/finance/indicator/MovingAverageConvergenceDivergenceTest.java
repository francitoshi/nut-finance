/*
 * MovingAverageConvergenceDivergenceTest.java
 *
 *  Copyright (C) 2017-2024 francitoshi@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  Report bugs or new features to: francitoshi@gmail.com
 */
package io.nut.finance.indicator;

import org.junit.jupiter.api.Test;

/**
 *
 * @author franci
 */
public class MovingAverageConvergenceDivergenceTest
{
    static final double[][] DATA = 
    {    	
        {	459.99 },
        {	448.85 },
        {	446.06 },
        {	450.81 },
        {	442.8 },
        {	448.97 },
        {	444.57 },
        {	441.4 },
        {	430.47 },
        {	420.05 },
        {	431.14 },
        {	425.66,	440.8975 },
        {	430.58,	439.3101923 },
        {	431.72,	438.1424704 },
        {	437.87,	438.1005519 },
        {	428.43,	436.6127747 },
        {	428.35,	435.3415786 },
        {	432.5,	434.9044126 },
        {	443.66,	436.2514261 },
        {	455.72,	439.2465913 },
        {	454.49,	441.5917311 },
        {	452.08,	443.2053109 },
        {	452.73,	444.6706477 },
        {	461.91,	447.3228558 },
        {	463.58,	449.8239549 },
        {	461.14,	451.5648849,	443.2896154,	8.275269504 },
        {	452.08,	451.6441334,	443.940755,	7.703378381 },
        {	442.66,	450.261959,	443.8458842,	6.416074757 },
        {	428.91,	446.9770422,	442.7395225,	4.237519783 },
        {	429.79,	444.3328819,	441.7802986,	2.552583325 },
        {	431.99,	442.433977,	441.0550913,	1.37888572 },
        {	427.72,	440.1702882,	440.0673067,	0.1029814912 },
        {	423.2,	437.5594746,	438.8178766,	-1.258401953 },
        {	426.21,	435.8134016,	437.8839598,	-2.07055819,	3.037525869,	-5.108084059 },
        {	426.98,	434.4544168,	437.0762591,	-2.621842328,	1.905652229,	-4.527494558 },
        {	435.69,	434.6445065,	436.9735732,	-2.32906674,	1.058708435,	-3.387775176 },
        {	434.33,	434.5961209,	436.777753,	-2.181632115,	0.4106403253,	-2.59227244 },
        {	429.8,	433.8582561,	436.2608824,	-2.402626273,	-0.1520129943,	-2.250613279 },
        {	419.85,	431.7031398,	435.0452615,	-3.342121681,	-0.7900347317,	-2.55208695 },
        {	426.24,	430.8626568,	434.3930199,	-3.530363136,	-1.338100413,	-2.192262723 },
        {	402.8,	426.5453249,	432.0527962,	-5.507471249,	-2.17197458,	-3.335496669 },
        {	392.05,	421.2383519,	429.0896261,	-7.851274229,	-3.30783451,	-4.543439719 },
        {	390.53,	416.51399,	426.2333575,	-9.719367455,	-4.590141099,	-5.129226357 },
        {	398.67,	413.7687608,	424.1916273,	-10.42286651,	-5.756686181,	-4.666180327 },
        {	406.13,	412.5935668,	422.853729,	-10.26016216,	-6.657381376,	-3.602780783 },
        {	405.46,	411.496095,	421.5653046,	-10.06920961,	-7.339747023,	-2.729462587 },
        {	408.38,	411.0166958,	420.5886154,	-9.571919612,	-7.786181541,	-1.785738071 },
        {	417.2,	411.9679734,	420.3376068,	-8.369633492,	-7.902871931,	-0.4667615613 },
        {	430.12,	414.7605928,	421.0622286,	-6.301635724,	-7.58262469,	1.280988966 },
        {	442.78,	419.0712709,	422.6709524,	-3.599681509,	-6.786036054,	3.186354544 },
        {	439.29,	422.1818446,	423.9019929,	-1.720148361,	-5.772858515,	4.052710154 },
        {	445.52,	425.77233,	425.5033268,	0.2690032323,	-4.564486166,	4.833489398 },
        {	449.98,	429.4965869,	427.3164137,	2.180173247,	-3.215554283,	5.39572753 },
        {	460.71,	434.2986505,	429.7900127,	4.508637809,	-1.670715865,	6.179353673 },
        {	458.66,	438.0465504,	431.9285303,	6.118020154,	-0.112968661,	6.230988815 },
        {	463.84,	442.0147734,	434.2923428,	7.722430594,	1.45411119,	6.268319404 },
        {	456.77,	444.2848083,	435.9573545,	8.327453809,	2.828779714,	5.498674095 },
        {	452.97,	445.6209916,	437.2175504,	8.403441185,	3.943712008,	4.459729177 },
        {	454.74,	447.023916,	438.5155097,	8.508406323,	4.856650871,	3.651755452 },
        {	443.86,	446.5371597,	438.9113978,	7.625761844,	5.410473066,	2.215288778 },
        {	428.85,	443.8160582,	438.1661091,	5.649949083,	5.458368269,	0.1915808139 },
        {	434.58,	442.3951262,	437.9004714,	4.494654765,	5.265625568,	-0.7709708033 },
        {	433.26,	440.9897221,	437.5567328,	3.432989362,	4.899098327,	-1.466108965 },
        {	442.93,	441.2882264,	437.9547526,	3.333473854,	4.585973432,	-1.252499579 },
        {	439.66,	441.0377301,	438.0810672,	2.956662856,	4.260111317,	-1.303448461 },
        {	441.35,	441.0857716,	438.3232104,	2.762561216,	3.960601297,	-1.198040081 }
    };
    
    /**
     * Test of get method. of class ExponentialMovingAverage.
     */
    @Test
    public void testAll()
    {
        final boolean debug = false;
        MovingAverageConvergenceDivergence instance = new MovingAverageConvergenceDivergence(12, 26, 9, true);

        double[] price = new double[DATA.length];
        for(int i=0;i<price.length;i++)
        {
            price[i] = DATA[i][0];
        }
        
        int seed = instance.seedSize(0.999999);        
        if(debug) System.out.println("seed="+seed);
        
        double[][] macd = instance.getAll(price);
        for(int i=0;i<DATA.length;i++)
        {
            if(debug && DATA[i].length>4)
            {
                System.out.printf("%.9f %.9f %.9f | %.9f %.9f %.9f \n", 
                        DATA[i][3],DATA[i][4],DATA[i][5], 
                        macd[0][i], macd[1][i], macd[2][i]);
            }
        }

        
    } 

}

